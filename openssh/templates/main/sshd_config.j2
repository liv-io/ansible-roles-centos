#-------------------------------------------------------------------------------
#                             ANSIBLE MANAGED FILE
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# INFORMATION
#-------------------------------------------------------------------------------
#
# Name   : sshd_config
# Type   : openssh configuration file
# Role   : openssh
#
# Authors: liv community
# License: Simplified BSD License
#
#-------------------------------------------------------------------------------

#	$OpenBSD: sshd_config,v 1.100 2016/08/15 12:32:04 naddy Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#

#-------------------------------------------------------------------------------
# PORT
#-------------------------------------------------------------------------------

{% if not ((openssh_port == '') or (openssh_port == [])) %}
{% for port in openssh_port %}
Port {{(port|int(22))}}
{% endfor %}
{% else %}
Port 22
{% endif %}

#-------------------------------------------------------------------------------
# ADDRESS FAMILY
#-------------------------------------------------------------------------------

{% if (openssh_address_family|match('any|all')) %}
AddressFamily any
{% elif (openssh_address_family|match('inet|ipv4')) %}
AddressFamily inet
{% elif (openssh_address_family|match('inet6|ipv6')) %}
AddressFamily inet6
{% else %}
#AddressFamily any
{% endif %}

#-------------------------------------------------------------------------------
# LISTEN ADDRESS
#-------------------------------------------------------------------------------

{% if not ((openssh_listen_address == '') or (openssh_listen_address == [])) %}
{% for listen_address in openssh_listen_address %}
ListenAddress {{listen_address}}
{% endfor %}
{% else %}
#ListenAddress 0.0.0.0
#ListenAddress ::
{% endif %}

#-------------------------------------------------------------------------------
# HOST KEY
#-------------------------------------------------------------------------------

{% if not ((openssh_host_key == '') or (openssh_host_key == [])) %}
{% for host_key in openssh_host_key %}
HostKey {{host_key}}
{% endfor %}
{% else %}
HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_dsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
{% endif %}

#-------------------------------------------------------------------------------
# CIPHERS
#-------------------------------------------------------------------------------

{% if not ((openssh_ciphers == '') or (openssh_ciphers == [])) %}
Ciphers {% for ciphers in openssh_ciphers %}{{ciphers}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
Ciphers aes256-ctr,aes192-ctr
{% endif %}

#-------------------------------------------------------------------------------
# HOST KEY ALGORITHMS
#-------------------------------------------------------------------------------

{% if not ((openssh_host_key_algorithms == '') or (openssh_host_key_algorithms == [])) %}
HostKeyAlgorithms {% for host_key_algorithms in openssh_host_key_algorithms %}{{host_key_algorithms}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
HostKeyAlgorithms ssh-ed25519,ssh-rsa
{% endif %}

#-------------------------------------------------------------------------------
# KEY EXCHANGE ALGORITHMS
#-------------------------------------------------------------------------------

{% if not ((openssh_kex_algorithms == '') or (openssh_kex_algorithms == [])) %}
KexAlgorithms {% for kex_algorithms in openssh_kex_algorithms %}{{kex_algorithms}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org
{% endif %}

#-------------------------------------------------------------------------------
# MESSAGE AUTHENTICATION CODE ALGORITHMS
#-------------------------------------------------------------------------------

{% if not ((openssh_macs == '') or (openssh_macs == [])) %}
MACs {% for macs in openssh_macs %}{{macs}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
MACs hmac-sha2-512,hmac-sha2-256
{% endif %}

#-------------------------------------------------------------------------------

# Ciphers and keying
#RekeyLimit default none

#-------------------------------------------------------------------------------
# LOGGING
#-------------------------------------------------------------------------------

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

#-------------------------------------------------------------------------------
# AUTHENTICATION
#-------------------------------------------------------------------------------

# Authentication:

#LoginGraceTime 2m
{% if (openssh_permit_root_login|match('true|yes|enable')) %}
PermitRootLogin yes
{% else %}
PermitRootLogin no
{% endif %}
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

{% if (openssh_pubkey_authentication|match('false|no|disable')) %}
PubkeyAuthentication no
{% else %}
PubkeyAuthentication yes
{% endif %}

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
{% if (openssh_password_authentication|match('false|no|disable')) %}
PasswordAuthentication no
{% else %}
PasswordAuthentication yes
{% endif %}
PermitEmptyPasswords no

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication no
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several
# problems.
UsePAM yes

#-------------------------------------------------------------------------------
# FORWARDING
#-------------------------------------------------------------------------------

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
{% if (openssh_x11_forwarding|match('true|yes|enable')) %}
X11Forwarding yes
{% else %}
X11Forwarding no
{% endif %}
{% if (openssh_x11_forwarding|match('true|yes|enable')) %}
X11DisplayOffset {{(openssh_x11_display_offset|int(10))}}
{% if (openssh_x11_use_localhost|match('true|yes|enable')) %}
X11UseLocalhost yes
{% else %}
X11UseLocalhost no
{% endif %}
{% endif %}

#-------------------------------------------------------------------------------
# OTHER
#-------------------------------------------------------------------------------

#PermitTTY yes
{% if (openssh_print_motd|match('true|yes|enable')) %}
PrintMotd yes
{% else %}
PrintMotd no
{% endif %}
{% if (openssh_print_last_log|match('false|no|disable')) %}
PrintLastLog no
{% else %}
PrintLastLog yes
{% endif %}
{% if (openssh_tcp_keep_alive|match('false|no|disable')) %}
TCPKeepAlive no
{% else %}
TCPKeepAlive yes
{% endif %}
#UseLogin no
#UsePrivilegeSeparation sandbox
#PermitUserEnvironment no
{% if (openssh_compression|match('true|yes|enable')) %}
Compression yes
{% elif (openssh_compression|match('false|no|disable')) %}
Compression no
{% else %}
Compression delayed
{% endif %}
#ClientAliveInterval 0
#ClientAliveCountMax 3
#ShowPatchLevel no
{% if (openssh_use_dns|match('true|yes|enable')) %}
UseDNS yes
{% else %}
UseDNS no
{% endif %}
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
VersionAddendum {{openssh_version_addendum}}

#-------------------------------------------------------------------------------
# BANNER
#-------------------------------------------------------------------------------

# no default banner path
{% if (openssh_banner|match('false|no|disable')) %}
Banner none
{% else %}
Banner {{file_path_banner}}
{% endif %}

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

#-------------------------------------------------------------------------------
# CONDITIONAL
#-------------------------------------------------------------------------------

{% if not ((openssh_match == '') or (openssh_match == [])) %}
{% for match in openssh_match %}
Match {{match.type}} {{match.name}}
{% for key, value in match.config.items() %}
  {{key}} {{value}}
{% endfor %}

{% endfor %}
{% else %}
# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
{% endif %}

#-------------------------------------------------------------------------------
# ACCESS RESTRICTION
#-------------------------------------------------------------------------------

# Login is disallowed for user names that match one of the patterns.
{% if not ((openssh_deny_users == '') or (openssh_deny_users == [])) %}
DenyUsers {% for deny_users in openssh_deny_users %}{{deny_users}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#DenyUsers

{% endif %}

# Login is allowed only for user names that match one of the patterns.
{% if not ((openssh_allow_users == '') or (openssh_allow_users == [])) %}
AllowUsers {% for allow_users in openssh_allow_users %}{{allow_users}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#AllowUsers

{% endif %}

# Login is disallowed for users whose primary group or
# supplementary group list matches one of the patterns.
{% if not ((openssh_deny_groups == '') or (openssh_deny_groups == [])) %}
DenyGroups {% for deny_groups in openssh_deny_groups %}{{deny_groups}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#DenyGroups

{% endif %}

# Login is allowed only for users whose primary group or
# supplementary group list matches one of the patterns.
{% if not ((openssh_allow_groups == '') or (openssh_allow_groups == [])) %}
AllowGroups {% for allow_groups in openssh_allow_groups %}{{allow_groups}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#AllowGroups

{% endif %}
