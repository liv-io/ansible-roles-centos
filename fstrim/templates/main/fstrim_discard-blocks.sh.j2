#!/usr/bin/env sh

#-------------------------------------------------------------------------------
#                             ANSIBLE MANAGED FILE
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# INFORMATION
#-------------------------------------------------------------------------------
#
# Name   : fstrim_discard-blocks.sh
# Type   : Shell script
# Role   : fstrim
#
# Authors: liv community
# License: Simplified BSD License
#
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# SHELL VARIABLES
#-------------------------------------------------------------------------------

SHELL='/bin/sh'
PATH='/sbin:/bin:/usr/sbin:/usr/bin'

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

which='/usr/bin/which' && [ -x ${which} ] || { echo "Error: Command 'which' not found."; exit 127; }
basename=$(${which} basename) || { echo "Error: Command 'basename' not found."; exit 127; }
date=$(${which} date) || { echo "Error: Command 'date' not found."; exit 127; }
echo=$(${which} echo) || { echo "Error: Command 'echo' not found."; exit 127; }
expr=$(${which} expr) || { echo "Error: Command 'expr' not found."; exit 127; }
hostname=$(${which} hostname) || { echo "Error: Command 'hostname' not found."; exit 127; }
logger=$(${which} logger) || { echo "Error: Command 'logger' not found."; exit 127; }
{% if (fstrim_monitor_mail_state is match('true|yes|enable')) %}
mailx=$(${which} mailx) || { echo "Error: Command 'mailx' not found."; exit 127; }
{% endif %}
rm=$(${which} rm) || { echo "Error: Command 'rm' not found."; exit 127; }
tr=$(${which} tr) || { echo "Error: Command 'tr' not found."; exit 127; }
touch=$(${which} touch) || { echo "Error: Command 'touch' not found."; exit 127; }
whoami=$(${which} whoami) || { echo "Error: Command 'whoami' not found."; exit 127; }

fstrim=$(${which} fstrim) || { echo "Error: Command 'fstrim' not found."; exit 127; }

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

host=$(${hostname} -s) || { echo "Error: Host name unknown."; exit 68; }
script="$(${basename} $0)[$$]" || { echo "Error: Command invoked cannot execute."; exit 126; }
time_start=$(${date} '+%s')
user='{{file_owner_fstrim_discard_blocks_sh}}'
lockfile='{{file_dst_fstrim_script_dir}}/fstrim_discard-blocks.lock'
retval=0
severity='Debug'
message='Please check log files for more information.'

log_file='{{file_dst_fstrim_log}}'

{% if (fstrim_monitor_mail_state is match('true|yes|enable')) %}
mail_sender='{{fstrim_monitor_mail_sender}}'
mail_recipient='{% for item in fstrim_monitor_mail_recipient %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}'
mail_subject='fstrim: Discard Blocks - Error ({{ansible_hostname}})'
{% endif %}

#-------------------------------------------------------------------------------
# FUNCTIONS
#-------------------------------------------------------------------------------

{% if (fstrim_monitor_mail_state is match('true|yes|enable')) %}
mail_error() {
  retval="$1"
  severity="$2"
  message="$3"
  mail_body="--------------------------------------------------------------------------------
ERROR
--------------------------------------------------------------------------------

Message     : ${message}
Severity    : ${severity}
Date & Time : $(${date} '+%Y-%m-%dT%H:%M:%S%z')

--------------------------------------------------------------------------------
SCRIPT
--------------------------------------------------------------------------------

Name        : fstrim_discard-blocks.sh
Type        : Shell script
PID         : $$

--------------------------------------------------------------------------------
SYSTEM
--------------------------------------------------------------------------------

Hostname    : {{ansible_hostname}}
FQDN        : {{ansible_fqdn}}"

  ${echo} "${mail_body}" | ${mailx} -r "${mail_sender}" -s "${mail_subject}" "${mail_recipient}" > /dev/null 2>&1
}
{% endif %}

check_script_user() {
  if [ "$(${whoami})" != "${user}" ]; then
    retval=77
    severity='Error'
    message="Please run script as user '${user}'"
    ${echo} "$(${date} '+%Y-%m-%dT%H:%M:%S%z') - ${host} - ${script}: ${severity}: ${message}"
    exit "${retval}"
  fi
}

create_lockfile() {
  if [ ! -e "${lockfile}" ]; then
    ${touch} "${lockfile}" || log_and_exit_on_error "$?" 'Warning' 'Could not create lockfile. Please investigate.'
  else
    log_and_exit_on_error "$?" 'Warning' 'Lockfile does already exist. Please investigate.'
  fi
}

remove_lockfile() {
  if [ -e "${lockfile}" ]; then
    ${rm} -f "${lockfile}" || log_and_exit_on_error "$?" 'Warning' 'Could not remove lockfile. Please investigate.'
  else
    log_and_exit_on_error "$?" 'Warning' 'Lockfile did not exist. Please investigate.'
  fi
}

log_and_exit_on_error() {
  retval="$1"
  severity="$2"
  message="$3"
  if [ "${retval}" -ne 0 ]; then
    ${rm} -f "${lockfile}"
    if [ -t 1 ] ; then
      ${echo} "$(${date} '+%Y-%m-%dT%H:%M:%S%z') - ${host} - ${script}: ${severity}: ${message}"
    fi
    ${logger} -t "${script}" "${severity}: ${message}"
{% if (fstrim_monitor_mail_state is match('true|yes|enable')) %}
    mail_error "${retval}" "${severity}" "${message}"
{% endif %}
    add_log_header 'fstrim failed'
    exit "${retval}"
  fi
}

log_and_exit() {
  time_end=$(${date} '+%s')
  time_exec=$(${expr} "${time_end}" - "${time_start}")
  time_hr=$(${date} -d "1970-01-01 ${time_exec} sec" '+%H:%M:%S')
  retval=0
  severity='Info'
  message='Unused blocks discarded successfully.'
  ${logger} -t "${script}" "${severity}: ${message} Duration: ${time_hr}"
  exit "${retval}"
}

add_log_header() {
  name="$1"
  name_upper=$(${echo} "${name}" | ${tr} '[:lower:]' '[:upper:]')
  date_time=$(${date} '+%Y-%m-%dT%H:%M:%S%z')
  echo "
#-------------------------------------------------------------------------------
# ${name_upper} | ${date_time}
#-------------------------------------------------------------------------------
" >> ${log_file}
}

#-------------------------------------------------------------------------------
# SCRIPT
#-------------------------------------------------------------------------------

check_script_user

create_lockfile

add_log_header 'fstrim started'

# Discard unused blocks
${fstrim} --all --verbose >> ${log_file} 2>&1
log_and_exit_on_error "$?" 'Error' 'Unable to discard unused blocks.'

add_log_header 'fstrim successful'

remove_lockfile

log_and_exit
