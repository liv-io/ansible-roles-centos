---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - disable
    - postgresql

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'cron create postgresql_run-backup'
  cron:
    state: 'present'
    disabled: 'yes'
    name: "{{cron_name_postgresql_run_backup}}"
    cron_file: "{{cron_cron_file_postgresql_run_backup}}"
    day: "{{cron_day_postgresql_run_backup}}"
    hour: "{{cron_hour_postgresql_run_backup}}"
    minute: "{{cron_minute_postgresql_run_backup}}"
    month: "{{cron_month_postgresql_run_backup}}"
    weekday: "{{cron_weekday_postgresql_run_backup}}"
    user: "{{cron_user_postgresql_run_backup}}"
    job: "{{cron_job_postgresql_run_backup}}"
  tags:
    - disable
    - postgresql

- name: 'file create postgresql.cfg'
  template:
    src: "{{file_src_postgresql_cfg}}"
    dest: "{{file_dst_postgresql_cfg}}"
    mode: "{{file_mode_postgresql_cfg}}"
    owner: "{{file_owner_postgresql_cfg}}"
    group: "{{file_group_postgresql_cfg}}"
  notify: 'service reload monit'
  when: (postgresql_monitor_monit_state is match('true|yes|enable'))
  tags:
    - disable
    - postgresql

#-------------------------------------------------------------------------------
# SYSTEM
#-------------------------------------------------------------------------------

- name: 'service stop postgresql'
  service:
    state: 'stopped'
    enabled: 'no'
    name: "{{service_name_postgresql}}"
  tags:
    - disable
    - postgresql
